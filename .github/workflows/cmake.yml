name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Ninja_release
  BUILD_TARGET: build_release
  VCPKG_BINARY_SOURCES: 'default'

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    # 创建权限
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3

    - name: "Set environmental variables"
      shell: bash
      run: |
        echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV

    - uses: ilammy/msvc-dev-cmd@v1

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v3
      
    - name: Cache vcpkg
      id: cache-vcpkg
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.VCPKG_ROOT }}
          !${{ env.VCPKG_ROOT }}/.git
          !${{ env.VCPKG_ROOT }}/buildtrees
          !${{ env.VCPKG_ROOT }}/packages
          !${{ env.VCPKG_ROOT }}/downloads
          ${{ github.workspace }}/build/vcpkg_installed
        key: ${{ runner.os }}-cache-key-v1-${{ hashFiles( 'vcpkg.json' ) }}
        restore-keys: |
        ${{ runner.os }}-cache-key-v1-
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -S${{github.workspace}} --preset ${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build --preset ${{env.BUILD_TARGET}}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{github.workspace}}/build/Ninja_release/*.dll
          ${{github.workspace}}/build/Ninja_release/*.exe
    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}}

